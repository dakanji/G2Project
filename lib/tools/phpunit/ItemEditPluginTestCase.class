<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

require_once __DIR__ . '/../../../modules/core/classes/GalleryView.class';

require_once __DIR__ . '/../../../modules/core/classes/GalleryController.class';

require_once __DIR__ . '/../../../modules/core/ItemEdit.inc';

/**
 * An ItemEditPlugin specific version of GalleryTestCase
 * @package Gallery
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 * @version $Revision: 17580 $
 */
class ItemEditPluginTestCase extends GalleryTestCase {
	/**
	 * The plugin instance
	 * @access protected
	 */
	public $_plugin;

	public function __construct($methodName, $moduleName, $pluginName) {
		parent::__construct($methodName);

		list($ret, $this->_plugin) = GalleryCoreApi::newFactoryInstanceById('ItemEditPlugin', $pluginName);

		if ($ret) {
			return $ret;
		}

		list($ret, $this->_module) = GalleryCoreApi::loadPlugin('module', $moduleName);

		if ($ret) {
			return $ret;
		}
	}

	public function handleRequest(&$item, &$preferred, $errorCode = null) {
		// Get our form variables
		$form = GalleryUtilities::getFormVariables('form');

		list($ret, $error, $status, $needsProgressBar) = $this->_plugin->handleRequest($form, $item, $preferred);

		if (isset($errorCode)) {
			$expectedErrorCode = implode(' | ', GalleryStatus::doStatic()->getErrorCodeConstants($errorCode));

			if ($ret) {
				$actualErrorCode = implode(' | ', GalleryStatus::doStatic()->getErrorCodeConstants($ret->getErrorCode()));
			} else {
				$actualErrorCode = 'SUCCESS';
			}
			$this->assertEquals($expectedErrorCode, $actualErrorCode, 'Unexpected error code!');
		} elseif ($ret) {
			return $ret;
		} else {
			// Check to make sure we got back everything we want
			$this->assertTrue(isset($error) && is_array($error), 'plugin error results missing');

			/*
			 * This doesn't appear to test much, but it will cause us to examine $status so if
			 * it's not set then we'll trigger a PHP warning which will fail the test
			 */
			$this->assertTrue(isset($status) || $status == null, 'plugin status result missing');
		}

		return array($error, $status);
	}

	public function _translate($message) {
		return $this->_module->translate($message);
	}
}
