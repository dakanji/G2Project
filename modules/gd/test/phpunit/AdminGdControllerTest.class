<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * AdminGd controller tests
 * @package Gd
 * @subpackage PHPUnit
 * @author Ernesto Baschny <ernst@baschny.de>
 * @version $Revision: 17580 $
 */
class AdminGdControllerTest extends GalleryControllerTestCase {
	public function __construct($methodName) {
		parent::__construct($methodName, 'gd.AdminGd');
	}

	public function setUp($x1 = null) {
		$ret = parent::setUp();

		if ($ret) {
			return $ret;
		}

		$ret = $this->_markPluginParametersForCleanup('module', 'gd');

		if ($ret) {
			return $ret;
		}
	}

	public function testSaveGoodPath() {
		global $gallery;
		$platform =& $gallery->getPlatform();
		$slash    = $platform->getDirectorySeparator();

		// Use valid inputs
		GalleryUtilities::putRequestVariable('form[action][save]', 1);
		GalleryUtilities::putRequestVariable('form[jpegQuality]', '12');

		// Perform the request and verify that we succeeded
		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'gd.AdminGd',
				),
				'status' => array(
					'saved' => 1,
				),
				'error' => array(),
			),
			$results
		);

		// Verify the settings went in properly
		$this->assertEquals(
			array(null, '12'),
			GalleryCoreApi::getPluginParameter('module', 'gd', 'jpegQuality')
		);
	}

	public function testReset() {
		GalleryUtilities::putRequestVariable('form[action][reset]', 1);

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'gd.AdminGd',
				),
				'status' => array(),
				'error'  => array(),
			),
			$results
		);
	}

	public function testCancel() {
		GalleryUtilities::putRequestVariable('form[action][cancel]', 1);

		$results = $this->handleRequest();
		$this->assertEquals(
			array(
				'redirect' => array(
					'view'    => 'core.SiteAdmin',
					'subView' => 'core.AdminPlugins',
				),
				'status' => array(),
				'error'  => array(),
			),
			$results
		);
	}
}
