<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * Options controller tests
 * @package PublishXp
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 * @version $Revision: 17580 $
 */
class OptionsControllerTest extends GalleryControllerTestCase {

    function OptionsControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'publishxp.Options');
    }

    function setUp() {
	global $gallery;
	$ret = parent::setUp();
	if ($ret) {
	   return $ret;
	}

	$this->_saveSession =& $gallery->getSession();
	$this->_mockSession = new OptionsControllerTestMockSession();
	$gallery->_session =& $this->_mockSession;
    }

    function tearDown() {
	global $gallery;
	$gallery->_session = $this->_saveSession;
	$ret = parent::tearDown();
	if ($ret) {
	   return $ret;
	}
    }

    function testSetOptions() {
	GalleryUtilities::putRequestVariable('form[stripExtensions]', 1);
	GalleryUtilities::putRequestVariable('form[setCaptions]', 2);
	GalleryUtilities::putRequestVariable('form[albumId]', 3);
	GalleryUtilities::putRequestVariable('form[action][setOptions]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array(
				      'view' => 'publishxp.UploadItems',
				      'stripExtensions' => true,
				      'setCaptions' => true,
				      'albumId' => 3),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }

    function testNoAction() {
	GalleryUtilities::putRequestVariable('form[stripExtensions]', 1);
	GalleryUtilities::putRequestVariable('form[setCaptions]', 2);
	GalleryUtilities::putRequestVariable('form[albumId]', 3);

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array('view' => 'publishxp.Options'),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }

    function testSetExtraOptions() {
	GalleryUtilities::putRequestVariable('form[action][setOptions]', 1);
	GalleryUtilities::putRequestVariable('form[albumId]', 2);
	GalleryUtilities::putRequestVariable('form[SomeOption][someValue]', 3);

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array(
				      'view' => 'publishxp.UploadItems',
				      'stripExtensions' => false,
				      'setCaptions' => false,
				      'albumId' => 2),
				  'status' => array(),
				  'error' => array()),
			    $results);

	$this->assertEquals(serialize(array('action' => array('setOptions' => '1'),
					    'albumId' => '2',
					    'SomeOption' => array('someValue' => '3'))),
			    $this->_mockSession->get('publishxp.extraOptionsForm'));
    }
}

class OptionsControllerTestMockSession {
    function put($key, $value) {
	$this->_data[$key] = $value;
    }

    function get($key) {
	return $this->_data[$key];
    }
}
?>
